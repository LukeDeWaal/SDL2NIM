##
## Code automatically generated by asn1scc tool
##

import
  asn1crt

type
  MyInt* = asn1SccUint

proc MyInt_Equal*(pVal1: ptr MyInt; pVal2: ptr MyInt): flag {.importc: "MyInt_Equal".}
proc MyInt_Initialize*(pVal: ptr MyInt) {.importc: "MyInt_Initialize".}
const
  ERR_MYINT* = 1

proc MyInt_IsConstraintValid*(pVal: ptr MyInt; pErrCode: ptr cint): flag {.
    importc: "MyInt_IsConstraintValid".}
type
  MyBool* = flag

proc MyBool_Equal*(pVal1: ptr MyBool; pVal2: ptr MyBool): flag {.importc: "MyBool_Equal".}
proc MyBool_Initialize*(pVal: ptr MyBool) {.importc: "MyBool_Initialize".}
const
  ERR_MYBOOL* = 6

proc MyBool_IsConstraintValid*(pVal: ptr MyBool; pErrCode: ptr cint): flag {.
    importc: "MyBool_IsConstraintValid".}
type
  MyEnum* = enum
    hello = 0, world = 1


##  please use the following macros to avoid breaking code.

const
  MyEnum_hello* = hello
  MyEnum_world* = world

proc MyEnum_Equal*(pVal1: ptr MyEnum; pVal2: ptr MyEnum): flag {.importc: "MyEnum_Equal".}
proc MyEnum_Initialize*(pVal: ptr MyEnum) {.importc: "MyEnum_Initialize".}
const
  ERR_MYENUM* = 11

proc MyEnum_IsConstraintValid*(pVal: ptr MyEnum; pErrCode: ptr cint): flag {.
    importc: "MyEnum_IsConstraintValid".}
## -- MySeq --------------------------------------------

type
  MySeq* {.bycopy.} = object
    a*: MyInt
    b*: MyBool
    c*: MyEnum


proc MySeq_Equal*(pVal1: ptr MySeq; pVal2: ptr MySeq): flag {.importc: "MySeq_Equal".}
proc MySeq_Initialize*(pVal: ptr MySeq) {.importc: "MySeq_Initialize".}
const
  ERR_MYSEQ* = 46
  ERR_MYSEQ_A_2* = 21
  ERR_MYSEQ_B_2* = 31
  ERR_MYSEQ_C_2* = 41

proc MySeq_IsConstraintValid*(pVal: ptr MySeq; pErrCode: ptr cint): flag {.
    importc: "MySeq_IsConstraintValid".}
##  ================= Encoding/Decoding function prototypes =================
##  These functions are placed at the end of the file to make sure all types
##  have been declared first, in case of parameterized ACN encodings
##  =========================================================================
